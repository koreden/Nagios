# Define the switch that we'll be monitoring

#define host{
#	use		generic-switch		; Inherit default values from a template
#	host_name	SF220			; The name we're giving to this switch
#
#	alias		Cisco SF220-48		; A longer name associated with the switch
#	address		192.168.0.245		; IP address of the switch
#	hostgroups	SF22048			; Host groups this switch is associated with
#	}
# Create a new hostgroup for switches

#define hostgroup{
#	hostgroup_name	switches		; The name of the hostgroup
#	alias		Network Switches	; Long name of the group
#	}
#
# ------------------------>> START PING CHECK <<---------------------------------------------------------------------------------
define service{
	use			generic-service	; Inherit values from a template
	host_name		ol-router0		; The name of the host the service is associated with
	service_description	PING		; The service description
	check_command		check_ping!200.0,20%!600.0,60%	; The command used to monitor the service
	normal_check_interval	5		; Check the service every 5 minutes under normal conditions
	retry_check_interval	1		; Re-check the service every minute until its final/hard state is determined
	}
# ------------------------>> END PING CHECK <<-----------------------------------------------------------------------------------
#
# ------------------------->> START INTERFACE UPTIME <<--------------------------------------------------------------------------
define service{
	use			generic-service	; Inherit values from a template
	host_name		ol-router0
	service_description	Uptime
	check_command		check_snmp!-C a5yvfO2r9E -o sysUpTime.0
	}
define service {
        use                     generic-service
        host_name               ol-router0
        service_description     Uptime Interface 1
        check_command           check_snmp!-C a5yvfO2r9E -o sysUpTime.1
    }
define service {
        use                     generic-service
        host_name               ol-router0
        service_description     Uptime Interface 2
        check_command           check_snmp!-C a5yvfO2r9E -o sysUpTime.2
    }
# -------------------------->> END INTERFACE UPTIME <<--------------------------------------------------------------------------
# -------------------------->> START INTERFACE STATUS <<------------------------------------------------------------------------
define service{
	use			generic-service	; Inherit values from a template
	host_name		ol-router0
	service_description	Port 1 Link Status
	check_command		check_snmp!-C a5yvfO2r9E -o ifOperStatus.1 -r 1 -m RFC1213-MIB
	}
define service {
        use                     generic-service
        host_name               ol-router0
        service_description     Port 2 Link Status
        check_command           check_snmp!-C a5yvfO2r9E -o ifOperStatus.2 -r 1 -m RFC1213-MIB
    }
define service {
        use                     generic-service
        host_name               ol-router0
        service_description     Port 3 Link Status
        check_command           check_snmp!-C a5yvfOr9E -o ifOperStatus.3 -r 1 -m RFC1213-MIB
    }
# -------------------------->> END INTERFACE STATUS <<-------------------------------------------------------------------------
# -------------------------->> START INTERFACE SPEED <<------------------------------------------------------------------------
define service {
	use			generic-service
	host_name		ol-router0
	service_description	Port 1 Link Speed
	check_command		check_snmp!-C a5yvfO2r9E -o ifSpeed.1
}
# --------------------------->> END INTERFACE SPEED <<-------------------------------------------------------------------------
# --------------------------->> START INTERFACE OUT DISCARDS <<----------------------------------------------------------------
define service {
        use                     generic-service
        host_name               ol-router0
        service_description     Port 1 Interface Out Discards
        check_command           check_snmp!-C a5yvfO2r9E -o ifOutDiscards.1
    }
define service {
        use                     generic-service
        host_name               ol-router0
        service_description     Port 2 Interface Out Discards
        check_command           check_snmp!-C a5yvfO2r9E -o ifOutDiscards.2
    }
define service {
        use                     generic-service
        host_name               ol-router0
        service_description     Port 3 Interface Out Discards
        check_command           check_snmp!-C a5yvfO2r9E -o ifOutDiscards.3
    }
define service {
        use                     generic-service
        host_name               ol-router0
        service_description     Port 4 Interface Out Discards
        check_command           check_snmp!-C a5yvfO2r9E -o ifOutDiscards.4
    }
define service {
        use                     generic-service
        host_name               ol-router0
        service_description     Port 5 Interface Out Discards
        check_command           check_snmp!-C a5yvfO2r9E -o ifOutDiscards.5
    }
define service {
        use                     generic-service
        host_name               ol-router0
        service_description     Port 6 Interface Out Discards
        check_command           check_snmp!-C a5yvfO2r9E -o ifOutDiscards.6
    }
define service {
        use                     generic-service
        host_name               ol-router0
        service_description     Port 7 Interface Out Discards
        check_command           check_snmp!-C a5yvfO2r9E -o ifOutDiscards.7
    }
define service {
        use                     generic-service
        host_name               ol-router0
        service_description     Port 8 Interface Out Discards
        check_command           check_snmp!-C a5yvfO2r9E -o ifOutDiscards.8
    }
# -------------------------->> END INTERFACE OUT DISCARDS <<-------------------------------------------------------------------
# -------------------------->> START INTERFACE OUT ERRORS <<-------------------------------------------------------------------
define service {
        use                     generic-service
        host_name               ol-router0
        service_description     Port 1 Interface Out Errors
        check_command           check_snmp!-C a5yvfO2r9E -o ifOutErrors.1
    }
define service {
        use                     generic-service
        host_name               ol-router0
        service_description     Port 2 Interface Out Errors
        check_command           check_snmp!-C a5yvfO2r9E -o ifOutErrors.2
    }
define service {
        use                     generic-service
        host_name               ol-router0
        service_description     Port 3 Interface Out Errors
        check_command           check_snmp!-C a5yvfO2r9E -o ifOutErrors.3
    }
define service {
        use                     generic-service
        host_name               ol-router0
        service_description     Port 4 Interface Out Errors
        check_command           check_snmp!-C a5yvfO2r9E -o ifOutErrors.4
    }
define service {
        use                     generic-service
        host_name               ol-router0
        service_description     Port 5 Interface Out Errors
        check_command           check_snmp!-C a5yvfO2r9E -o ifOutErrors.5
    }
define service {
        use                     generic-service
        host_name               ol-router0
        service_description     Port 6 Interface Out Errors
        check_command           check_snmp!-C a5yvfO2r9E -o ifOutErrors.6
    }
define service {
       use                      generic-service
       host_name                ol-router0
       service_description      Port 7 Interfaec Out Errors
       check_command            check_snmp!-C a5yvfO2r9E -o ifOutErrors.7
    }
define service {
        use                     generic-service
        host_name               ol-router0
        service_description     Port 8 Interface Out Errors
        check_command           check_snmp!-C a5yvfO2r9E -o ifOutErrors.8
    }
# ---------------------------->> END INTERFACE OUT ERRORS <<---------------------------------------------------------
# Monitor bandwidth via MRTG logs

#define service{
#	use			generic-service	; Inherit values from a template
#	host_name		ol-router0
#	service_description	Port 1 Bandwidth Usage
#	check_command		check_local_mrtgtraf!/var/lib/mrtg/192.168.1.253_1.log!AVG!1000000,1000000!5000000,5000000!10
#	}
